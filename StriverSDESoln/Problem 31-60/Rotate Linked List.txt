/*Rotate Linked List*/
/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;

     Node()
     {
         this.data = 0;
         this.next = null;
     }

     Node(int data)
     {
         this.data = data;
         this.next = null;
     }

     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
     }
 };

 *****************************************************************/

public class Solution {
    public static Node rotate(Node head, int k) {
        // Write your code here.
        if(head==null || head.next == null) return head;
        int n = sizee(head);
        
        if(k>n) k=k%n;
        if(k==n || k==0) return head;
        int l = 1;
        Node temp = head;
        Node neww = head;
        while(temp!=null)
        {
            if(l == n-k)
            {
                neww = temp.next;
                temp.next = null;
                break;
            }
            temp = temp.next;
            l++;
        }
        temp = neww;
        while(temp.next!=null)
        {
            temp = temp.next;
        }
        temp.next=head;
        return neww;

    }
    static int sizee(Node head)
    {
        int s = 1;
        while(head.next!=null)
        {
            head = head.next;
            s++;
        }
        return s;
    }
}